---
import { getTranslation, getCurrentLang, getAlternateLanguage } from '../i18n/utils.js';

const lang = getCurrentLang(Astro.url);
const t = getTranslation(lang);
const alternateLang = getAlternateLanguage(lang);
---

<header id="main-header" class="fixed top-0 z-50 w-full bg-cream border-b border-beige-dark transition-transform duration-300 ease-in-out">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo -->
      <a href={lang === 'ar' ? '/' : '/fr'} class="flex items-center hover:opacity-80 transition-opacity">
        <img 
          src="/logo_bijouterie-fond transparent.png" 
          alt="Le Coin d'Or - Bijouterie"
          class="h-12 w-auto"
          loading="eager"
        />
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8 rtl:space-x-reverse">
        <a href={lang === 'ar' ? '/' : '/fr'} class="text-dark hover:text-gold transition-colors font-medium">
          {t.nav.home}
        </a>
        <a href={lang === 'ar' ? '/gallery' : '/fr/gallery'} class="text-dark hover:text-gold transition-colors font-medium">
          {t.nav.gallery}
        </a>
        <a href={lang === 'ar' ? '/about' : '/fr/about'} class="text-dark hover:text-gold transition-colors font-medium">
          {t.nav.about}
        </a>
        <a href={lang === 'ar' ? '/contact' : '/fr/contact'} class="text-dark hover:text-gold transition-colors font-medium">
          {t.nav.contact}
        </a>
        
        <!-- Language Switcher -->
        <button 
          onclick="switchLanguage()" 
          class="bg-gold text-white px-4 py-2 rounded-lg hover:bg-copper transition-colors font-medium"
          aria-label={`Switch to ${alternateLang === 'ar' ? 'Arabic' : 'French'}`}
        >
          {alternateLang === 'ar' ? 'عربي' : 'Français'}
        </button>
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden p-2 text-dark hover:text-gold transition-colors"
        aria-label="Toggle mobile menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden mt-4 pt-4 border-t border-beige-dark">
      <div class="flex flex-col space-y-3">
        <a href={lang === 'ar' ? '/' : '/fr'} class="text-dark hover:text-gold transition-colors font-medium py-2">
          {t.nav.home}
        </a>
        <a href={lang === 'ar' ? '/gallery' : '/fr/gallery'} class="text-dark hover:text-gold transition-colors font-medium py-2">
          {t.nav.gallery}
        </a>
        <a href={lang === 'ar' ? '/about' : '/fr/about'} class="text-dark hover:text-gold transition-colors font-medium py-2">
          {t.nav.about}
        </a>
        <a href={lang === 'ar' ? '/contact' : '/fr/contact'} class="text-dark hover:text-gold transition-colors font-medium py-2">
          {t.nav.contact}
        </a>
        <button 
          onclick="switchLanguage()" 
          class="bg-gold text-white px-4 py-2 rounded-lg hover:bg-copper transition-colors font-medium text-left"
        >
          {alternateLang === 'ar' ? 'عربي' : 'Français'}
        </button>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Hide/Show header on scroll - Complete hide/show behavior
  let lastScrollTop = 0;
  let isScrolling = false;
  const header = document.getElementById('main-header');
  const scrollThreshold = 50; // Minimum scroll distance to trigger hide/show
  
  function handleScroll() {
    if (!isScrolling) {
      window.requestAnimationFrame(() => {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        // Only start hiding after scrolling past the threshold
        if (scrollTop > scrollThreshold) {
          if (scrollTop > lastScrollTop) {
            // Scrolling down - hide header completely
            header?.classList.add('-translate-y-full');
          } else {
            // Scrolling up - show header
            header?.classList.remove('-translate-y-full');
          }
        } else {
          // At the top - always show header
          header?.classList.remove('-translate-y-full');
        }
        
        lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
        isScrolling = false;
      });
    }
    isScrolling = true;
  }

  // Add scroll event listener with optimized throttling
  let ticking = false;
  window.addEventListener('scroll', () => {
    if (!ticking) {
      requestAnimationFrame(handleScroll);
      ticking = true;
      setTimeout(() => { ticking = false; }, 16); // ~60fps
    }
  }, { passive: true });

  // Optional: Show header when mouse moves to top of screen (remove if not wanted)
  // document.addEventListener('mousemove', (e) => {
  //   if (e.clientY <= 30) {
  //     header?.classList.remove('-translate-y-full');
  //   }
  // });
</script>